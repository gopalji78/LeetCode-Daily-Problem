PROBLEM NAME: Longest Subarray of 1's After Deleting One Element
Problem Link: https://leetcode.com/problems/longest-subarray-of-1s-after-deleting-one-element/description/

class Solution {
public:
    int longestSubarray(vector<int>& nums) {
        int prev = 0, ahead = 0, n = nums.size(); 
        bool flag = false;
        int maxlen = 0;
        for (int i=0; i<n; i++) {
            if (nums[i] == 1) flag?ahead++:prev++;
            if (i>0 && i<n && nums[i]==0 && nums[i-1]==1 && nums[i+1]==1) {
                if (flag) {
                    prev = ahead;
                    ahead = 0;
                }
                else flag = true;
            }

            if (i>0 && nums[i]==0 && nums[i-1]==0) {
                prev = 0;
                ahead = 0;
            }
            maxlen = max(maxlen, prev+ahead);
        }

        return maxlen==n?--n:maxlen;
    }
};
