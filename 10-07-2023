PROBLEM NAME: Minimum Depth of Binary Tree
Problem Link: https://leetcode.com/problems/minimum-depth-of-binary-tree/description/

/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    int minDepth(TreeNode* root) {
        if (root == NULL) return 0;

        if (root->left == NULL) 
            return minDepth(root->right) + 1;
        if (root->right == NULL) 
            return minDepth(root->left) + 1;
        int leftLen = minDepth(root->left);
        int rightLen = minDepth(root->right);

        return min(leftLen, rightLen) + 1;
    }
};
