PROBLEM NAME: Maximum Level Sum of a Binary Tree
Problem Link: https://leetcode.com/problems/maximum-level-sum-of-a-binary-tree/

/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    int maxLevelSum(TreeNode* root) {
        long long max_sum = INT_MIN;
        int max_sum_lvl = 1;

        queue<TreeNode*> q;
        q.push(root);
        int lvl = 1;

        while (!q.empty()){
            int sz = q.size();
            long long cur_lvl_sum = 0;

            while(sz--){
                TreeNode* temp = q.front();
                q.pop();

                cur_lvl_sum += temp->val;
                if (temp->left) q.push(temp->left);
                if (temp->right) q.push(temp->right);
            }

            if (cur_lvl_sum > max_sum){
                max_sum = cur_lvl_sum;
                max_sum_lvl = lvl;
            }
            lvl++;

        }

        return max_sum_lvl;

        
    }
};
