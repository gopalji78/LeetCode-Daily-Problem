PROBLEM NAME:  Make Array Strictly Increasing
Problem Link: https://leetcode.com/problems/make-array-strictly-increasing/


class Solution {
public:
    vector<unordered_map<int, int>> dp;
    int solver(vector<int>& arr1, vector<int>& arr2, int index, int prev) {
        if (index == arr1.size()) return 0;

        if (dp[index].find(prev) != dp[index].end()) return dp[index][prev];
        int include = 1e9, exclude = 1e9;
        if (prev < arr1[index]) {
            exclude = 0+solver(arr1, arr2, index+1, arr1[index]);
        }
        auto it = upper_bound(arr2.begin(), arr2.end(), prev);
        if (it != arr2.end())
        include = 1+solver(arr1, arr2, index+1, *it);
        return dp[index][prev] = min(exclude, include);
        
    }
    int makeArrayIncreasing(vector<int>& arr1, vector<int>& arr2) {
        sort(arr2.begin(), arr2.end());
        dp.resize(2001);
        int ans = solver(arr1, arr2, 0, -1);

        if (ans == 1e9) return -1;
        return ans;
    } 
};
