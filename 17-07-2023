PROBLEM NAME:  Add Two Numbers II
Problem Link: https://leetcode.com/problems/add-two-numbers-ii/description/

/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* reverse (ListNode* head) {
        ListNode* curr = head;
        ListNode* prev = NULL;
        ListNode* nxt;

        while (curr != NULL) {
            nxt = curr->next;
            curr->next = prev;
            prev = curr;
            curr = nxt;
        }
        return prev;
    }
    ListNode* addTwoNumbers(ListNode* l1, ListNode* l2) {
        l1 = reverse(l1);
        l2 = reverse(l2);

        int sum, carry = 0;
        ListNode* dummyHead = new ListNode(-1);
        ListNode* temp = dummyHead;
        while (l1 != NULL || l2 != NULL || carry > 0) {
            sum = 0;
            if (l1 != NULL) {
                sum += l1->val;
                l1 = l1->next;
            }

            if (l2 != NULL) {
                sum += l2->val;
                l2 = l2->next;
            }

            sum+=carry;
            temp->next = new ListNode(sum%10);
            temp = temp->next;
            carry = sum/10;
        }
        return reverse(dummyHead->next);
    }
};
