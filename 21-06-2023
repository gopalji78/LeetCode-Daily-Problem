PROBLEM NAME: Minimum Cost to Make Array Equal
Problem Link: https://leetcode.com/problems/minimum-cost-to-make-array-equal/

class Solution {
public:
    long long solver(vector<int>& nums, vector<int>& cost, long long median){
        long long sum = 0;
        for(int i=0; i<nums.size(); i++)
            sum = sum+abs(1ll*nums[i]-median)*(1ll*cost[i]);
        return sum;
    }
    long long minCost(vector<int>& nums, vector<int>& cost) {
        vector<pair<int, int>> v;
        for (int i=0; i<nums.size(); i++) {
            v.push_back({nums[i], cost[i]});
        }

        sort(v.begin(), v.end());

        long long sum = 0;
        for (int i=0; i<cost.size(); i++) {
            sum = sum+ (1ll*v[i].second);
        }

        long long median, tot = 0;
        int i=0; 
        while (tot<(sum+1)/2 && i<nums.size()) {
            tot = tot+(1ll*v[i].second);
            median = v[i].first;
            i++;
        }   

        return solver(nums, cost, median);
    }
};
