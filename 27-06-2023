PROBLEM NAME:  Find K Pairs with Smallest Sums
Problem Link: https://leetcode.com/problems/find-k-pairs-with-smallest-sums/description/

class Solution {
public:
    vector<vector<int>> kSmallestPairs(vector<int>& nums1, vector<int>& nums2, int k) {
        int n = nums1.size();
        int m = nums2.size();
        set<pair<int, int>> st;
        vector<vector<int>> ans;
        priority_queue<pair<int, pair<int, int>>, vector<pair<int, pair<int, int>>> ,greater<pair<int, pair<int, int>>>> pq;
        pq.push({nums1[0] + nums2[0], {0, 0}});
        st.insert({0, 0});

        while (k-- && !pq.empty()) {
            int i = pq.top().second.first;
            int j = pq.top().second.second;

            pq.pop();
            ans.push_back({nums1[i], nums2[j]});

            if (i+1 < n && st.find({i+1, j}) == st.end()) {
                pq.push({nums1[i+1] + nums2[j], {i+1, j}});
                st.insert({i+1, j});
            }


            if (j+1 < m && st.find({i, j+1}) == st.end()) {
                pq.push({nums1[i] + nums2[j+1], {i, j+1}});
                st.insert({i, j+1});
            }
        }
        return ans;

    }
};
